SHELL := /bin/bash

# Cible par d√©faut (optionnelle)
.DEFAULT_GOAL := help

.PHONY: config

.PHONY: term 
term: terminal config-terminal

.PHONY: terminal
terminal:
	@echo "‚ÑπÔ∏è  Configuration du terminal ‚òÄÔ∏è"
	@if ! command -v brew >/dev/null 2>&1; then \
	    echo "‚ùå Homebrew non trouv√©, installation..."; \
	    /bin/bash -c "$$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"; \
	else \
	    echo "‚úÖ Homebrew trouv√©"; \
	fi
	@echo "üîÑ Mise √† jour de Homebrew..."
	@brew update
	@if ! command -v nvim >/dev/null 2>&1; then \
	    echo "‚ùå nvim non trouv√©, installation..."; \
		brew install nvim; \
	else \
	    echo "‚úÖ nvim trouv√©"; \
	fi
	@if ! command -v starship >/dev/null 2>&1; then \
	    echo "‚ùå starship non trouv√©, installation..."; \
		brew install starship; \
	else \
	    echo "‚úÖ starship trouv√©"; \
	fi
	@if ! command -v zsh-history-substring-search >/dev/null 2>&1; then \
	    echo "‚ùå zsh-history-substring-search non trouv√©, installation..."; \
		brew install zsh-history-substring-search; \
	else \
	    echo "‚úÖ zsh-history-substring-search trouv√©"; \
	fi
	@if ! command -v zsh-autosuggestions >/dev/null 2>&1; then \
	    echo "‚ùå zsh-autosuggestions non trouv√©, installation..."; \
		brew install zsh-autosuggestions; \
	else \
	    echo "‚úÖ zsh-autosuggestions trouv√©"; \
	fi
	@if ! command -v git >/dev/null 2>&1; then \
	    echo "‚ùå git non trouv√©, installation..."; \
		brew install git; \
	else \
	    echo "‚úÖ git trouv√©"; \
	fi
	@if ! command -v lazygit >/dev/null 2>&1; then \
	    echo "‚ùå lazygit non trouv√©, installation..."; \
		brew install lazygit; \
	else \
	    echo "‚úÖ lazygit trouv√©"; \
	fi
	@if ! command -v fzf >/dev/null 2>&1; then \
	    echo "‚ùå fzf non trouv√©, installation..."; \
		brew install fzf; \
	else \
	    echo "‚úÖ fzf trouv√©"; \
	fi
	@if ! command -v ripgrep >/dev/null 2>&1; then \
	    echo "‚ùå ripgrep non trouv√©, installation..."; \
		brew install ripgrep; \
	else \
	    echo "‚úÖ ripgrep trouv√©"; \
	fi
	@if ! command fd >/dev/null 2>&1; then \
	    echo "‚ùå fd non trouv√©, installation..."; \
		brew install fd; \
	else \
	    echo "‚úÖ fd trouv√©"; \
	fi
	@if ! command -v direnv >/dev/null 2>&1; then \
	    echo "‚ùå direnv non trouv√©, installation..."; \
		brew install direnv; \
	else \
	    echo "‚úÖ direnv trouv√©"; \
	fi


.PHONY: config-terminal
config-terminal:
	@echo "‚ÑπÔ∏è Installation des fichiers de configuration"
	@mv $$HOME/.zshrc $$HOME/.zshrc.bak || true
	@cp shell/zshrc $$HOME/.zshrc
	@mkdir -p $$HOME/.config || true
	@cp -r config/* $$HOME/.config
	@echo "‚úÖ Installation des fichiers de configuration termin√©e"

.PHONY: devops
devops:
	@echo "‚ÑπÔ∏è Installation des outils DevOps"
	@source config/devops; \
	if [ "$${KUBECTL:-true}" = "true" ]; then \
		if ! command -v kubectl >/dev/null 2>&1; then \
			echo "‚ùå kubectl non trouv√©, installation..."; \
			brew install kubectl; \
		else \
			echo "‚úÖ kubectl trouv√©"; \
		fi; \
	else \
		echo "‚è≠Ô∏è  kubectl installation skipped (KUBECTL=false)"; \
	fi
	@if [ "$${K9S:-true}" = "true" ]; then \
		if ! command -v k9s >/dev/null 2>&1; then \
			echo "‚ùå k9s non trouv√©, installation..."; \
			brew install k9s; \
		else \
			echo "‚úÖ k9s trouv√©"; \
		fi; \
	else \
		echo "‚è≠Ô∏è  k9s installation skipped (K9S=false)"; \
	fi
	@if [ "$${HELM:-true}" = "true" ]; then \
		if ! command -v helm >/dev/null 2>&1; then \
			echo "‚ùå helm non trouv√©, installation..."; \
			brew install helm; \
			helm plugin install https://github.com/databus23/helm-diff; \
		else \
			echo "‚úÖ helm trouv√©"; \
		fi; \
	else \
		echo "‚è≠Ô∏è  helm installation skipped (HELM=false)"; \
	fi
	@if [ "$${STERN:-true}" = "true" ]; then \
		if ! command -v stern >/dev/null 2>&1; then \
			echo "‚ùå stern non trouv√©, installation..."; \
			brew install stern; \
		else \
			echo "‚úÖ stern trouv√©"; \
		fi; \
	else \
		echo "‚è≠Ô∏è  stern installation skipped (STERN=false)"; \
	fi
	@if [ "$${HELMWAVE:-true}" = "true" ]; then \
		if ! command -v helmwave >/dev/null 2>&1; then \
			echo "‚ùå helmwave non trouv√©, installation..."; \
			brew install helmwave/tap/helmwave; \
		else \
			echo "‚úÖ helmwave trouv√©"; \
		fi; \
	else \
		echo "‚è≠Ô∏è  helmwave installation skipped (HELMWAVE=false)"; \
	fi
	@if [ "$${MINIO:-true}" = "true" ]; then \
		if ! command -v minio >/dev/null 2>&1; then \
			echo "‚ùå minio non trouv√©, installation..."; \
			brew install minio; \
		else \
			echo "‚úÖ minio trouv√©"; \
		fi; \
	else \
		echo "‚è≠Ô∏è  minio installation skipped (MINIO=false)"; \
	fi

.PHONY: dev
dev:
	@echo "‚ÑπÔ∏è Installation des outils de d√©veloppement"
	@source config/dev; \
	if [ "$${PYENV:-true}" = "true" ]; then \
		if ! command -v pyenv >/dev/null 2>&1; then \
			echo "‚ùå pyenv non trouv√©, installation..."; \
			brew install pyenv; \
		else \
			echo "‚úÖ pyenv trouv√©"; \
		fi; \
	else \
		echo "‚è≠Ô∏è  pyenv installation skipped (PYENV=false)"; \
	fi
	@if [ "$${NVM:-true}" = "true" ]; then \
		if ! command -v nvm >/dev/null 2>&1; then \
			echo "‚ùå nvm non trouv√©, installation..."; \
			brew install nvm; \
		else \
			echo "‚úÖ nvm trouv√©"; \
		fi; \
	else \
		echo "‚è≠Ô∏è  nvm installation skipped (NVM=false)"; \
	fi
	@if [ "$${GO:-true}" = "true" ]; then \
		if ! command -v go >/dev/null 2>&1; then \
			echo "‚ùå go non trouv√©, installation..."; \
			brew install go; \
		else \
			echo "‚úÖ go trouv√©"; \
		fi; \
	else \
		echo "‚è≠Ô∏è  go installation skipped (GO=false)"; \
	fi
	@if [ "$${NODE:-true}" = "true" ]; then \
		if ! command -v node >/dev/null 2>&1; then \
			echo "‚ùå node non trouv√©, installation..."; \
			nvm install --lts; \
		else \
			echo "‚úÖ node trouv√©"; \
		fi; \
	else \
		echo "‚è≠Ô∏è  node installation skipped (NODE=false)"; \
	fi
	@if [ "$${NPM:-true}" = "true" ]; then \
		if ! command -v npm >/dev/null 2>&1; then \
			echo "‚ùå npm non trouv√©, installation..."; \
			nvm install --lts; \
		else \
			echo "‚úÖ npm trouv√©"; \
		fi; \
	else \
		echo "‚è≠Ô∏è  npm installation skipped (NPM=false)"; \
	fi
	@if [ "$${RUST:-true}" = "true" ]; then \
		if ! command -v rustc >/dev/null 2>&1; then \
			echo "‚ùå rustc non trouv√©, installation..."; \
			curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh; \
		else \
			echo "‚úÖ rustc trouv√©"; \
		fi; \
	else \
		echo "‚è≠Ô∏è  rustc installation skipped (RUST=false)"; \
	fi
	@if [ "$${CARGO:-true}" = "true" ]; then \
		if ! command -v cargo >/dev/null 2>&1; then \
			echo "‚ùå cargo non trouv√©, installation..."; \
			curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh; \
		else \
			echo "‚úÖ cargo trouv√©"; \
		fi; \
	else \
		echo "‚è≠Ô∏è  cargo installation skipped (CARGO=false)"; \
	fi
	@echo "‚úÖ Tous les pr√©requis de d√©veloppement sont install√©s"

.PHONY: help
help:
	@echo "Commandes disponibles :"
	@echo "  make init       - deps et install"
	@echo "  make deps       - Installation des d√©pendances"
	@echo "  make install    - Installation des fichiers de configuration"
	@echo "  make help       - Afficher cette aide"
